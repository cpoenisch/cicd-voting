name: Pipeline

on:
  push:
    branches:
      - github-actions

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Publish Docker Image to GPR
        run: |
          echo ${{ secrets.CR_PAT }} | docker login ghcr.io -u $GITHUB_ACTOR --password-stdin
          IMAGE_ID=ghcr.io/${{ github.repository }}:latest
          echo "Building and pushing $IMAGE_ID ..."
          docker pull $IMAGE_ID | true
          docker build . -t $IMAGE_ID --cache-from $IMAGE_ID
          docker push $IMAGE_ID
  lint:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/cpoenisch/cicd-voting:latest
    steps:
      - uses: actions/checkout@v2
      - name: prepare
        run: |
          python --version
          pip install pylint
      - name: pylint
        run: pylint --rcfile=pylint.cfg --exit-zero app pages voting
  test:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/cpoenisch/cicd-voting:latest
    steps:
      - uses: actions/checkout@v2
      - name: prepare
        run: |
          python --version
          pip install unittest-xml-reporting
      - name: pytest
        run: python ./manage.py test
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: akhileshns/heroku-deploy@v3.5.6
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: cicd-voting
          heroku_email: awsler@protonmail.com
          branch: github-actions
        env:
          HD_SECRET_KEY: ${{secrets.DJANGO_SECRET_KEY}}
          HD_DJANGO_SU_NAME: admin
          HD_DJANGO_SU_EMAIL: admin@localhost
          HD_DJANGO_SU_PASSWORD: ${{secrets.DJANGO_SU_PASSWORD}}
          HD_DJANGO_ALLOWED_HOSTS: cicd-voting.herokuapp.com
          HD_USE_POSTGRES: 1
          HD_DEBUG: 0
